{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MyPC/Documents/WGU/worldMap/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MapsvgComponent = class MapsvgComponent {\n  constructor(svgObject, worldApiService) {\n    this.svgObject = svgObject;\n    this.worldApiService = worldApiService;\n  }\n};\nMapsvgComponent = __decorate([Component({\n  selector: 'app-mapsvg',\n  templateUrl: './mapsvg.component.svg',\n  styleUrls: ['./mapsvg.component.css']\n})], MapsvgComponent);\nsvgObject.getElementById(\"map\");\nsvgObject.querySelectorAll(\"path\").forEach(element => {\n  element.addEventListener(\"mouseover\", function () {\n    element.style.fill = \"#e4b1ab\";\n  });\n  element.addEventListener(\"mouseover\", function () {\n    element.style.fill = \"\";\n  });\n  element.addEventListener(\"click\", function () {\n    function getApi() {\n      return _getApi.apply(this, arguments);\n    }\n    function _getApi() {\n      _getApi = _asyncToGenerator(function* () {\n        let url = \"https://api.worldbank.org/v2/country\";\n        let country = url + '/' + element.id + '?format=json';\n        let response = yield fetch(country);\n        let data = yield response.json();\n        let dataSet = data[1][0];\n        let name = dataSet.name;\n        document.getElementById('name').innerHTML = name;\n        let capital = dataSet.capitalCity;\n        document.getElementById('capital').innerHTML = capital;\n        let region = dataSet.region.value;\n        document.getElementById('region').innerHTML = region;\n        let incomeLvl = dataSet.incomeLevel.value;\n        document.getElementById('incomeLvl').innerHTML = incomeLvl;\n        let longitude = dataSet.longitude;\n        document.getElementById('longitude').innerHTML = longitude;\n        let latitude = dataSet.latitude;\n        document.getElementById('latitude').innerHTML = latitude;\n      });\n      return _getApi.apply(this, arguments);\n    }\n    getApi();\n  });\n});","map":{"version":3,"names":["Component","MapsvgComponent","constructor","svgObject","worldApiService","__decorate","selector","templateUrl","styleUrls","getElementById","querySelectorAll","forEach","element","addEventListener","style","fill","getApi","_getApi","apply","arguments","_asyncToGenerator","url","country","id","response","fetch","data","json","dataSet","name","document","innerHTML","capital","capitalCity","region","value","incomeLvl","incomeLevel","longitude","latitude"],"sources":["C:\\Users\\MyPC\\Documents\\WGU\\worldMap\\src\\app\\mapsvg\\mapsvg.component.ts"],"sourcesContent":["import { Component, ElementRef } from '@angular/core';\n\n\n@Component({\n  selector: 'app-mapsvg',\n  templateUrl: './mapsvg.component.svg',\n  styleUrls: ['./mapsvg.component.css']\n})\nexport class MapsvgComponent {\n\n  constructor(\n   private svgObject: ElementRef,\n    private worldApiService: WorldbankApiService\n   ){};\n\n\n  }\n  svgObject.getElementById(\"map\");\n \n svgObject.querySelectorAll(\"path\").forEach(element => {\n  element.addEventListener(\"mouseover\", function(){\n    element.style.fill = \"#e4b1ab\"\n  });\n\n  element.addEventListener(\"mouseover\", function(){\n    element.style.fill = \"\"  \n  });\n  \n  element.addEventListener(\"click\", function(){\n    async function getApi(){\n    let url = \"https://api.worldbank.org/v2/country\";\n    let country = url + '/' + element.id + '?format=json';\n    let response = await fetch(country);\n    let data = await response.json();\n    let dataSet = data[1][0];\n    let name = dataSet.name\n    document.getElementById('name').innerHTML = name\n    let capital = dataSet.capitalCity\n    document.getElementById('capital').innerHTML = capital\n    let region = dataSet.region.value\n    document.getElementById('region').innerHTML = region\n    let incomeLvl = dataSet.incomeLevel.value\n    document.getElementById('incomeLvl').innerHTML = incomeLvl\n    let longitude = dataSet.longitude\n    document.getElementById('longitude').innerHTML = longitude\n    let latitude = dataSet.latitude\n    document.getElementById('latitude').innerHTML = latitude\n    }\n\n    getApi();\n  });\n })\n\n \n"],"mappings":";;AAAA,SAASA,SAAS,QAAoB,eAAe;AAQ9C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAE1BC,YACSC,SAAqB,EACpBC,eAAoC;IADrC,KAAAD,SAAS,GAATA,SAAS;IACR,KAAAC,eAAe,GAAfA,eAAe;EACtB;CAGF;AARUH,eAAe,GAAAI,UAAA,EAL3BL,SAAS,CAAC;EACTM,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWP,eAAe,CAQzB;AACDE,SAAS,CAACM,cAAc,CAAC,KAAK,CAAC;AAEhCN,SAAS,CAACO,gBAAgB,CAAC,MAAM,CAAC,CAACC,OAAO,CAACC,OAAO,IAAG;EACpDA,OAAO,CAACC,gBAAgB,CAAC,WAAW,EAAE;IACpCD,OAAO,CAACE,KAAK,CAACC,IAAI,GAAG,SAAS;EAChC,CAAC,CAAC;EAEFH,OAAO,CAACC,gBAAgB,CAAC,WAAW,EAAE;IACpCD,OAAO,CAACE,KAAK,CAACC,IAAI,GAAG,EAAE;EACzB,CAAC,CAAC;EAEFH,OAAO,CAACC,gBAAgB,CAAC,OAAO,EAAE;IAAA,SACjBG,MAAMA,CAAA;MAAA,OAAAC,OAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,QAAA;MAAAA,OAAA,GAAAG,iBAAA,CAArB,aAAqB;QACrB,IAAIC,GAAG,GAAG,sCAAsC;QAChD,IAAIC,OAAO,GAAGD,GAAG,GAAG,GAAG,GAAGT,OAAO,CAACW,EAAE,GAAG,cAAc;QACrD,IAAIC,QAAQ,SAASC,KAAK,CAACH,OAAO,CAAC;QACnC,IAAII,IAAI,SAASF,QAAQ,CAACG,IAAI,EAAE;QAChC,IAAIC,OAAO,GAAGF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,IAAIG,IAAI,GAAGD,OAAO,CAACC,IAAI;QACvBC,QAAQ,CAACrB,cAAc,CAAC,MAAM,CAAC,CAACsB,SAAS,GAAGF,IAAI;QAChD,IAAIG,OAAO,GAAGJ,OAAO,CAACK,WAAW;QACjCH,QAAQ,CAACrB,cAAc,CAAC,SAAS,CAAC,CAACsB,SAAS,GAAGC,OAAO;QACtD,IAAIE,MAAM,GAAGN,OAAO,CAACM,MAAM,CAACC,KAAK;QACjCL,QAAQ,CAACrB,cAAc,CAAC,QAAQ,CAAC,CAACsB,SAAS,GAAGG,MAAM;QACpD,IAAIE,SAAS,GAAGR,OAAO,CAACS,WAAW,CAACF,KAAK;QACzCL,QAAQ,CAACrB,cAAc,CAAC,WAAW,CAAC,CAACsB,SAAS,GAAGK,SAAS;QAC1D,IAAIE,SAAS,GAAGV,OAAO,CAACU,SAAS;QACjCR,QAAQ,CAACrB,cAAc,CAAC,WAAW,CAAC,CAACsB,SAAS,GAAGO,SAAS;QAC1D,IAAIC,QAAQ,GAAGX,OAAO,CAACW,QAAQ;QAC/BT,QAAQ,CAACrB,cAAc,CAAC,UAAU,CAAC,CAACsB,SAAS,GAAGQ,QAAQ;MACxD,CAAC;MAAA,OAAAtB,OAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAEDH,MAAM,EAAE;EACV,CAAC,CAAC;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}