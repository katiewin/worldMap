{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MyPC/Documents/WGU/worldMap/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MapsvgComponent = class MapsvgComponent {};\nMapsvgComponent = __decorate([Component({\n  selector: 'app-mapsvg',\n  templateUrl: './mapsvg.component.svg',\n  styleUrls: ['./mapsvg.component.css']\n})], MapsvgComponent);\nsvgObject => {};\nwindow.addEventListener(\"load\", function () {\n  svgObject = document.getElementById('svg-object').getSVGDocument().getElementById(\"map\");\n  svgObject.querySelectorAll(\"path\").forEach(element => {\n    element.addEventListener(\"mouseover\", function () {\n      element.style.fill = \"#e4b1ab\";\n    });\n    element.addEventListener(\"mouseover\", function () {\n      element.style.fill = \"\";\n    });\n    element.addEventListener(\"click\", function () {\n      function getApi() {\n        return _getApi.apply(this, arguments);\n      }\n      function _getApi() {\n        _getApi = _asyncToGenerator(function* () {\n          let url = \"https://api.worldbank.org/v2/country\";\n          let country = url + '/' + element.id + '?format=json';\n          let response = yield fetch(country);\n          let data = yield response.json();\n          let dataSet = data[1][0];\n          let name = dataSet.name;\n          document.getElementById('name').innerHTML = name;\n          let capital = dataSet.capitalCity;\n          document.getElementById('capital').innerHTML = capital;\n          let region = dataSet.region.value;\n          document.getElementById('region').innerHTML = region;\n          let incomeLvl = dataSet.incomeLevel.value;\n          document.getElementById('incomeLvl').innerHTML = incomeLvl;\n          let longitude = dataSet.longitude;\n          document.getElementById('longitude').innerHTML = longitude;\n          let latitude = dataSet.latitude;\n          document.getElementById('latitude').innerHTML = latitude;\n        });\n        return _getApi.apply(this, arguments);\n      }\n      getApi();\n    });\n  });\n});","map":{"version":3,"names":["Component","MapsvgComponent","__decorate","selector","templateUrl","styleUrls","svgObject","window","addEventListener","document","getElementById","getSVGDocument","querySelectorAll","forEach","element","style","fill","getApi","_getApi","apply","arguments","_asyncToGenerator","url","country","id","response","fetch","data","json","dataSet","name","innerHTML","capital","capitalCity","region","value","incomeLvl","incomeLevel","longitude","latitude"],"sources":["C:\\Users\\MyPC\\Documents\\WGU\\worldMap\\src\\app\\mapsvg\\mapsvg.component.ts"],"sourcesContent":["import { Component, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-mapsvg',\n  templateUrl: './mapsvg.component.svg',\n  styleUrls: ['./mapsvg.component.css']\n})\nexport class MapsvgComponent {\n\n  constructor(\n  private (svgObject: ElementRef) {};\n  )\n}\n\nwindow.addEventListener(\"load\", function() {\n  svgObject = document.getElementById('svg-object').getSVGDocument().getElementById(\"map\");\n \n svgObject.querySelectorAll(\"path\").forEach(element => {\n  element.addEventListener(\"mouseover\", function(){\n    element.style.fill = \"#e4b1ab\"\n  });\n\n  element.addEventListener(\"mouseover\", function(){\n    element.style.fill = \"\"  \n  });\n  \n  element.addEventListener(\"click\", function(){\n    async function getApi(){\n    let url = \"https://api.worldbank.org/v2/country\";\n    let country = url + '/' + element.id + '?format=json';\n    let response = await fetch(country);\n    let data = await response.json();\n    let dataSet = data[1][0];\n    let name = dataSet.name\n    document.getElementById('name').innerHTML = name\n    let capital = dataSet.capitalCity\n    document.getElementById('capital').innerHTML = capital\n    let region = dataSet.region.value\n    document.getElementById('region').innerHTML = region\n    let incomeLvl = dataSet.incomeLevel.value\n    document.getElementById('incomeLvl').innerHTML = incomeLvl\n    let longitude = dataSet.longitude\n    document.getElementById('longitude').innerHTML = longitude\n    let latitude = dataSet.latitude\n    document.getElementById('latitude').innerHTML = latitude\n    }\n\n    getApi();\n  });\n});\n});\n\n"],"mappings":";;AAAA,SAASA,SAAS,QAAoB,eAAe;AAO9C,WAAMC,eAAe,GAArB,MAAMA,eAAe,GAGnB;AAHIA,eAAe,GAAAC,UAAA,EAL3BF,SAAS,CAAC;EACTG,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWJ,eAAe,CAGnB;AAAEK,SAAqB,IAAC,CAAE,CAAC;AAIpCC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE;EAC9BF,SAAS,GAAGG,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,cAAc,EAAE,CAACD,cAAc,CAAC,KAAK,CAAC;EAEzFJ,SAAS,CAACM,gBAAgB,CAAC,MAAM,CAAC,CAACC,OAAO,CAACC,OAAO,IAAG;IACpDA,OAAO,CAACN,gBAAgB,CAAC,WAAW,EAAE;MACpCM,OAAO,CAACC,KAAK,CAACC,IAAI,GAAG,SAAS;IAChC,CAAC,CAAC;IAEFF,OAAO,CAACN,gBAAgB,CAAC,WAAW,EAAE;MACpCM,OAAO,CAACC,KAAK,CAACC,IAAI,GAAG,EAAE;IACzB,CAAC,CAAC;IAEFF,OAAO,CAACN,gBAAgB,CAAC,OAAO,EAAE;MAAA,SACjBS,MAAMA,CAAA;QAAA,OAAAC,OAAA,CAAAC,KAAA,OAAAC,SAAA;MAAA;MAAA,SAAAF,QAAA;QAAAA,OAAA,GAAAG,iBAAA,CAArB,aAAqB;UACrB,IAAIC,GAAG,GAAG,sCAAsC;UAChD,IAAIC,OAAO,GAAGD,GAAG,GAAG,GAAG,GAAGR,OAAO,CAACU,EAAE,GAAG,cAAc;UACrD,IAAIC,QAAQ,SAASC,KAAK,CAACH,OAAO,CAAC;UACnC,IAAII,IAAI,SAASF,QAAQ,CAACG,IAAI,EAAE;UAChC,IAAIC,OAAO,GAAGF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxB,IAAIG,IAAI,GAAGD,OAAO,CAACC,IAAI;UACvBrB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACqB,SAAS,GAAGD,IAAI;UAChD,IAAIE,OAAO,GAAGH,OAAO,CAACI,WAAW;UACjCxB,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACqB,SAAS,GAAGC,OAAO;UACtD,IAAIE,MAAM,GAAGL,OAAO,CAACK,MAAM,CAACC,KAAK;UACjC1B,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACqB,SAAS,GAAGG,MAAM;UACpD,IAAIE,SAAS,GAAGP,OAAO,CAACQ,WAAW,CAACF,KAAK;UACzC1B,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACqB,SAAS,GAAGK,SAAS;UAC1D,IAAIE,SAAS,GAAGT,OAAO,CAACS,SAAS;UACjC7B,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACqB,SAAS,GAAGO,SAAS;UAC1D,IAAIC,QAAQ,GAAGV,OAAO,CAACU,QAAQ;UAC/B9B,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACqB,SAAS,GAAGQ,QAAQ;QACxD,CAAC;QAAA,OAAArB,OAAA,CAAAC,KAAA,OAAAC,SAAA;MAAA;MAEDH,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,CAAC;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}